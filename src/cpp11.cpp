// Generated by cpp11: do not edit by hand
// clang-format off


#include "cpp11/declarations.hpp"
#include <R_ext/Visibility.h>

// packedrtree-r.cpp
SEXP packed_rtree_create(list rct, int node_size);
extern "C" SEXP _rtree_packed_rtree_create(SEXP rct, SEXP node_size) {
  BEGIN_CPP11
    return cpp11::as_sexp(packed_rtree_create(cpp11::as_cpp<cpp11::decay_t<list>>(rct), cpp11::as_cpp<cpp11::decay_t<int>>(node_size)));
  END_CPP11
}
// packedrtree-r.cpp
list packed_rtree_query(sexp tree_sexp, list rct);
extern "C" SEXP _rtree_packed_rtree_query(SEXP tree_sexp, SEXP rct) {
  BEGIN_CPP11
    return cpp11::as_sexp(packed_rtree_query(cpp11::as_cpp<cpp11::decay_t<sexp>>(tree_sexp), cpp11::as_cpp<cpp11::decay_t<list>>(rct)));
  END_CPP11
}

extern "C" {
static const R_CallMethodDef CallEntries[] = {
    {"_rtree_packed_rtree_create", (DL_FUNC) &_rtree_packed_rtree_create, 2},
    {"_rtree_packed_rtree_query",  (DL_FUNC) &_rtree_packed_rtree_query,  2},
    {NULL, NULL, 0}
};
}

extern "C" attribute_visible void R_init_rtree(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
  R_forceSymbols(dll, TRUE);
}
